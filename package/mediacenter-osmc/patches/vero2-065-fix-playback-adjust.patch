From 82dd931d2af9594ed9540f9ef41d686e15a96ec6 Mon Sep 17 00:00:00 2001
From: tanio99 <tanio99@wolke7.net>
Date: Sun, 29 Mar 2020 12:05:20 +0200
Subject: [PATCH 1/3] CDVDDemuxFFmpeg: also check for extradata_size change
 before adding a disabled stream

---
 xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp b/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp
index 223f52e..ccfecbc 100644
--- a/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp
+++ b/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp
@@ -1115,7 +1115,8 @@ DemuxPacket* CDVDDemuxFFmpeg::Read()
     else if (stream->type == STREAM_VIDEO)
     {
       if (static_cast<CDemuxStreamVideo*>(stream)->iWidth != m_pFormatContext->streams[pPacket->iStreamId]->codecpar->width ||
-          static_cast<CDemuxStreamVideo*>(stream)->iHeight != m_pFormatContext->streams[pPacket->iStreamId]->codecpar->height)
+          static_cast<CDemuxStreamVideo*>(stream)->iHeight != m_pFormatContext->streams[pPacket->iStreamId]->codecpar->height ||
+		  (stream->disabled && stream->ExtraSize != m_pFormatContext->streams[pPacket->iStreamId]->codecpar->extradata_size))
       {
         // content has changed
         stream = AddStream(pPacket->iStreamId);
-- 
2.7.4


From 1590a91420a3f04a7ffcc61c1e74d22024094a05 Mon Sep 17 00:00:00 2001
From: tanio99 <tanio99@wolke7.net>
Date: Fri, 3 Apr 2020 16:04:50 +0200
Subject: [PATCH 2/3] CDVDDemuxFFmpeg: when adding video streams ignore frame
 rates which seem to be nonsense

---
 .../VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp     | 28 ++++++++++++++++++++++
 .../cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.h |  3 +++
 2 files changed, 31 insertions(+)

diff --git a/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp b/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp
index ccfecbc..45bd459 100644
--- a/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp
+++ b/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp
@@ -1477,6 +1477,17 @@ void CDVDDemuxFFmpeg::DisposeStreams()
   m_parsers.clear();
 }
 
+bool CDVDDemuxFFmpeg::isFpsNonsense(const AVRational &frameRate)
+{
+  if (frameRate.num == 0 || frameRate.den == 0)
+  {
+	return true;
+  }
+
+  const double fps = (double) frameRate.num / (double) frameRate.den;
+  return fps > 500.;
+}
+
 CDemuxStream* CDVDDemuxFFmpeg::AddStream(int streamIdx)
 {
   AVStream* pStream = m_pFormatContext->streams[streamIdx];
@@ -1531,6 +1542,18 @@ CDemuxStream* CDVDDemuxFFmpeg::AddStream(int streamIdx)
 
         AVRational r_frame_rate = pStream->r_frame_rate;
 
+        if (isFpsNonsense(r_frame_rate))
+        {
+          r_frame_rate.num = 0;
+          r_frame_rate.den = 0;
+        }
+
+        if (isFpsNonsense(pStream->avg_frame_rate))
+        {
+          pStream->avg_frame_rate.num = 0;
+          pStream->avg_frame_rate.den = 0;
+        }
+
         //average fps is more accurate for mkv files
         if (m_bMatroska && pStream->avg_frame_rate.den && pStream->avg_frame_rate.num)
         {
@@ -1542,6 +1565,11 @@ CDemuxStream* CDVDDemuxFFmpeg::AddStream(int streamIdx)
           st->iFpsRate = r_frame_rate.num;
           st->iFpsScale = r_frame_rate.den;
         }
+        else if(pStream->avg_frame_rate.den && pStream->avg_frame_rate.num)
+        {
+          st->iFpsRate = pStream->avg_frame_rate.num;
+          st->iFpsScale = pStream->avg_frame_rate.den;
+        }
         else
         {
           st->iFpsRate  = 0;
diff --git a/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.h b/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.h
index d634bef..c950f7b 100644
--- a/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.h
+++ b/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.h
@@ -175,5 +175,8 @@ protected:
   double m_dtsAtDisplayTime;
   bool m_seekToKeyFrame = false;
   double m_startTime = 0;
+
+private:
+  bool isFpsNonsense(const AVRational &frameRate);
 };
 
-- 
2.7.4


From 3b2d01222288c3b3ccb3abedebbcbd27382643b6 Mon Sep 17 00:00:00 2001
From: tanio99 <tanio99@wolke7.net>
Date: Fri, 3 Apr 2020 16:06:31 +0200
Subject: [PATCH 3/3] CDVDDemuxFFmpeg: don't close/reopen stream

---
 xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp | 11 -----------
 1 file changed, 11 deletions(-)

diff --git a/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp b/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp
index 45bd459..a21dd53 100644
--- a/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp
+++ b/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp
@@ -599,17 +599,6 @@ bool CDVDDemuxFFmpeg::Open(std::shared_ptr<CDVDInputStream> pInput, bool fileinf
   m_startTime = 0;
   m_seekStream = -1;
 
-  if (m_checkTransportStream && m_streaminfo)
-  {
-    int64_t duration = m_pFormatContext->duration;
-    std::shared_ptr<CDVDInputStream> pInputStream = m_pInput;
-    Dispose();
-    m_reopen = true;
-    if (!Open(pInputStream, false))
-      return false;
-    m_pFormatContext->duration = duration;
-  }
-
   // seems to be a bug in ffmpeg, hls jumps back to start after a couple of seconds
   // this cures the issue
   if (m_pFormatContext->iformat && strcmp(m_pFormatContext->iformat->name, "hls,applehttp") == 0)
-- 
2.7.4


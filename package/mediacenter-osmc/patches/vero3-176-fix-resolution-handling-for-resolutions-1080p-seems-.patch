From 95b1ae1bcd6fa81bd34cac5d93acab9ef8bd1508 Mon Sep 17 00:00:00 2001
From: tanio99 <tanio99@wolke7.net>
Date: Thu, 9 Jan 2020 11:24:45 +0100
Subject: [PATCH 7/7] fix resolution handling for resolutions < 1080p (seems to
 be a libMali bug)

---
 xbmc/utils/AMLUtils.cpp | 30 ++++++++++++++++++++++++++++--
 1 file changed, 28 insertions(+), 2 deletions(-)

diff --git a/xbmc/utils/AMLUtils.cpp b/xbmc/utils/AMLUtils.cpp
index 92f74e2..555c93b 100644
--- a/xbmc/utils/AMLUtils.cpp
+++ b/xbmc/utils/AMLUtils.cpp
@@ -671,6 +671,22 @@ void aml_disable_freeScale()
   SysfsUtils::SetInt("/sys/class/graphics/fb1/free_scale", 0);
 }
 
+static bool isMaliBug()
+{
+  std::string model;
+
+  SysfsUtils::GetString("/proc/device-tree/model", model);
+  if (model.rfind("Vero4K", 0) == 0)
+  {
+    std::string buggyMali;
+
+    SysfsUtils::GetString("/sys/firmware/devicetree/base/buggymali", buggyMali);
+    return buggyMali.rfind("true", 0) == 0;
+  }
+
+  return false;
+}
+
 void aml_set_framebuffer_resolution(const RESOLUTION_INFO &res, std::string framebuffer_name)
 {
   aml_set_framebuffer_resolution(res.iWidth, res.iHeight, framebuffer_name);
@@ -688,8 +704,18 @@ void aml_set_framebuffer_resolution(int width, int height, std::string framebuff
     {
       vinfo.xres = width;
       vinfo.yres = height;
-      vinfo.xres_virtual = 1920;
-      vinfo.yres_virtual = 2160;
+      vinfo.xres_virtual = width;
+      vinfo.yres_virtual = height*2;
+
+      if (isMaliBug())
+      {
+        // There seems to be a bug in libMali or the Mali driver which can't handle
+        // virtual resolutions other than those originally set when libMali was
+        // initialized.
+        vinfo.xres_virtual = 1920;
+        vinfo.yres_virtual = 2160;
+      }
+
       vinfo.bits_per_pixel = 32;
       vinfo.activate = FB_ACTIVATE_ALL;
       ioctl(fd0, FBIOPUT_VSCREENINFO, &vinfo);
-- 
2.7.4

